package br.com.rexpress.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import br.com.rexpress.util.DAOGenerico;
import br.com.rexpress.util.EntityManagerUtil;
import br.com.rexpress.valuesObjects.Instituicao;
import br.com.rexpress.valuesObjects.Rota;
import br.com.rexpress.valuesObjects.Turno;

public class InstituicaoDAO extends DAOGenerico<Instituicao>{
	private EntityManager aEntityManager;
	
	public InstituicaoDAO(){
	}
	
	@SuppressWarnings("unchecked")
	public List<Instituicao> listarTudo(){
		aEntityManager = EntityManagerUtil.getEntityManager();
		Query q = aEntityManager.createNamedQuery("Instituicao.findAll");
		List<Instituicao> retornoConsulta = q.getResultList();
		return retornoConsulta;
	}
	
	@SuppressWarnings("unchecked")
	public List<Instituicao> listarInstituicaoPorRota(Rota pRota){
		aEntityManager = EntityManagerUtil.getEntityManager();
		Query q = aEntityManager.createNamedQuery("Instituicao.instituicaoPorRota");
		q.setParameter("rota", pRota.getId());
		List<Instituicao> retornoConsulta = q.getResultList();
		return retornoConsulta;
	}
	
	@SuppressWarnings("unchecked")
	public List<Instituicao> listarEscolas(){
		aEntityManager = EntityManagerUtil.getEntityManager();
		
		Query q = aEntityManager.createNamedQuery("Instituicao.listarEscolas");
		List<Instituicao> retornoConsulta = q.getResultList();
		
		return retornoConsulta;
	}
	
	@SuppressWarnings("unchecked")
	public List<Instituicao> listarCreches(){
		aEntityManager = EntityManagerUtil.getEntityManager();
		
		Query q = aEntityManager.createNamedQuery("Instituicao.listarCreches");
		List<Instituicao> retornoConsulta = q.getResultList();
		
		Query q2 = aEntityManager.createNamedQuery("Turno.turnosCreches");
		List<Turno> turnosCreches = q2.getResultList();
		
		for(int i = 0; i < retornoConsulta.size();i++){
			if(turnosCreches.get(i).getInstituicao().getId().equals(retornoConsulta.get(i).getId())){
				retornoConsulta.get(i).addTurno(turnosCreches.get(i));
			}
		}
		
		return retornoConsulta;
	}
	
	public void inserirTurnos(Instituicao pInstituicao){
		TurnoDAO dao = new TurnoDAO();
		for (Turno turnos : pInstituicao.getTurnos()) {
			if(turnos != null){
				turnos.setInstituicao(pInstituicao);
				dao.inserir(turnos);
			}
		}
		
	}

}
